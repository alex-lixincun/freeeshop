@using Final_eshop_xincunli.Models
@model List<Final_eshop_xincunli.Models.IProduct>
<div class="errorMessageContent"></div>
@if (Model.Count > 0)
{
    Member m = MemberManage.Get(User.Identity.Name);
    <table id="cartList" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model[0].Product.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Amount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Price)
                </th>
                @if (m.Role == Role.Premium)
                {
                    <th>
                        @Html.DisplayNameFor(model => model[0].Product.Discount)
                    </th>
                }
                <th>
                    @Html.DisplayNameFor(model => model[0].Product.Tax)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model[0].Product.Shipping)
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                double totalprice = 0;
                double rawtotalprice = 0;
                double tax = 0;
                double shipping = 0;
                double maxshipping = 0;
                double rawprice = 0;
                double price = 0;
                double totaltax = 0;}
            @for (int i = 0; i < Model.Count(); i++)
            {
                rawprice = Model[i].Price;
                //If current user was a premium member, then will be charge after discount.
                price = m.Role == Role.Premium ? (rawprice * (100 - Model[i].Product.Discount) / 100) : rawprice;
                tax = Math.Round(price * Model[i].Product.Tax / 100, 2);

                //Finding maximum shipping fee, an order only charge a maximum shipping fee.
                if (maxshipping < Model[i].Product.Shipping)
                {
                    maxshipping = Model[i].Product.Shipping;
                }
                shipping = m.Role == Role.Premium ? 0 : maxshipping;

                //Summary
                totaltax += tax;
                totalprice += price + tax;
                rawtotalprice += rawprice + tax;

                <tr class="cartList-item">
                    @Html.HiddenFor(model => Model[i].Id)
                    <td class="cart-item-title">
                        @Html.DisplayFor(model => Model[i].Product.ProductName)
                    </td>
                    <td class="cart-item-amount">
                        @Html.DisplayFor(model => Model[i].Amount)
                    </td>
                    <td class="cart-item-price">
                        <span class="price">@Html.DisplayFor(model => Model[i].Price)</span>
                    </td>
                    @if (m.Role == Role.Premium)
                    {
                        <td>
                            @Html.DisplayFor(model => Model[i].Product.Discount)%
                        </td>
                    }
                    <td class="cart-item-price">
                        <span class="price">@tax</span>
                    </td>
                    <td class="cart-item-price">
                        <span class="price">@shipping</span>
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            <tr>
                <td colspan="6">
                    <span class="cartTotal">Tax of: $@Math.Round(totaltax, 2)</span>
                </td>
            </tr>
            <tr>
                <td colspan="6">
                    <span class="cartTotal">Shipping fee of: $@Math.Round(shipping, 2) <del>$@Math.Round(maxshipping, 2)</del></span>
                </td>
            </tr>
            <tr>
                <td colspan="6">
                    <span class="cartTotal">Order Total: $@Math.Round(totalprice + shipping, 2) <del>$@Math.Round(rawtotalprice + maxshipping, 2)</del></span>
                </td>
            </tr>
        </tfoot>
    </table>
                }
                else
                {
                    <p class="notContent">
                        No Products
                    </p>
                }
